Global:
    cache_root: D:/Cache
    SF_raw: //161.55.120.117/NMML_AcousticsData/Audio_Data
    SF_foc: //161.55.120.117/NMML_AcousticsData/Audio_Data/DecimatedWaves
    Wrapper: False
    parameters:
        queryfg1:
          > "SELECT data_collection.name,soundfiles.name,soundfiles.datetime,soundfiles.duration,bins.* FROM bins JOIN soundfiles ON 
          > bins.soundfiles_id = soundfiles.id JOIN data_collection ON data_collection.id = soundfiles.data_collection_id WHERE data_collection.name = 'BS15_AU_PM04' 
          > AND bins.type = 1"
        #this one returns soundfiles which contain signal to be analyzed
        queryfg2:
          > "SELECT DISTINCT data_collection.name,soundfiles.name,soundfiles.datetime,soundfiles.duration,bins.* FROM bins JOIN soundfiles ON 
          > bins.soundfiles_id = soundfiles.id JOIN data_collection ON data_collection.id = soundfiles.data_collection_id JOIN bins_detections ON bins_detections.bins_id = bins.id JOIN 
          > detections ON detections.id = bins_detections.detections_id WHERE detections.status = 1 AND detections.procedure = 23 AND detections.label = 99 AND bins.type = 1 AND data_collection.sampling_rate = 16384
          > AND data_collection.name IN ('BS15_AU_PM04','BS10_AU_PM02-a','AL19_AU_UN01-b','AL19_AU_UM01','AL19_AU_UN01-a')"
        querygt1:
          > "SELECT DISTINCT detections.* FROM detections JOIN bins_detections on bins_detections.detections_id = detections.id JOIN bins on bins.id = bins_detections.bins_id 
          > WHERE detections.status = 1 AND detections.signal_code = 3 AND label = 1 AND procedure IN (10,13,12) AND bins.id IN {FG}"
        querygt3:
          > "SELECT DISTINCT detections.* FROM detections JOIN bins_detections on bins_detections.detections_id = detections.id JOIN bins on bins.id = bins_detections.bins_id 
          > WHERE detections.status = 1 AND detections.signal_code = 3 AND procedure IN (5,10,13,12) AND modified = (SELECT MAX(modified) FROM detections WHERE signal_code = 3) AND bins.id IN {FG}"
        #use this to look at lm 5 by fg
        querygt1_5:
          > "SELECT DISTINCT detections.* FROM detections JOIN bins_detections on bins_detections.detections_id = detections.id JOIN bins on bins.id = bins_detections.bins_id 
          > WHERE detections.status = 1 AND detections.signal_code = 3 AND procedure = 5 AND bins.id IN {FG}"
        querygt1_6:
          > "SELECT DISTINCT detections.* FROM detections WHERE detections.status = 1 AND detections.signal_code = 3 AND procedure = 5 AND detections.start_file IN {FG}"
        #use this to look at lm 5 by deployment
        querygt2:
          > "SELECT DISTINCT detections.* FROM detections WHERE detections.status = 1 AND procedure = 23 AND label = 99 AND detections.start_file IN {FG}"
        #bins vers of this for grouped review
        querygt4:
          > "SELECT DISTINCT detections.* FROM detections JOIN bins_detections on bins_detections.detections_id = detections.id JOIN bins on bins.id = bins_detections.bins_id 
          > WHERE detections.status = 1 AND procedure = 23 AND label = 99 AND bins.id IN {FG}"
        querygt_odd_dets:
          > "SELECT DISTINCT detections.* FROM detections JOIN soundfiles ON detections.end_file = soundfiles.id 
          > WHERE detections.status = 1 AND procedure = 5 AND detections.start_file = detections.end_file AND detections.end_time > soundfiles.duration AND detections.start_file IN {FG}"
Job:
    FormatFG:
        parameters:
            decimate_data: n
            #decimate_data: n
            difftime_limit: 3600
            methodID: pampgdb-standard-pullfg
            methodvers: v1-0
            methodID2m: matlabdecimate
            methodvers2m: V1s0
            target_samp_rate: 512
            #target_samp_rate: 8192
            file_groupID: 
              #- lm2gen_og_train
              #- lm2gen_train_pos_set_no_olvp
              #- lm2gen_train_rand_set_no_ovlp
              #- lm2gen_hardneg_ds
              #- lm2gen_oddtp
              #- CX12_AU_WT02
              #- BS15_AU_PM04
              #below is useful if revieweing a lot at the same sampling rate. 
              - [queryfg2]
        arguments:
            hard_rerun: y
        descriptors:
            runtype: lib
            language: R
            runtype2m: bin
            language2m: MATLAB
    FormatGT:
        parameters:
            methodID: pampgdb-standard-pullgt
            methodvers: v1-2
            query: [querygt4]
            remove_proc_ovlp: n
        arguments:
            hard_rerun: y
        descriptors:
            runtype: lib
            language: R
    RavenViewDETx:
        parameters:
            methodID: rv-simple-w-metadata
            methodvers: v1-10
        arguments:
            fg_fill: n
            hard_rerun: y
            #ignore_decimated: n
            ignore_decimated: y
        descriptors:
            runtype: lib
            language: R
    RavenToDETx:
      parameters: 
        methodID: rd-simple-w-metadata
        methodvers: v1-5
      descriptors:
        runtype: lib
        language: R
    EditRAVENx:
      #this process always has an instructions parameter. changing these will change hash
      parameters: 
        instructions:
          > Open up a Raven Pro 1.5 window. Holding the control key, drag and drop the file into the Raven window.        
          > Review the contents for correctness, adding, modifying, or deleting as necessary.
          > If you are rerunning this process, there may be a previously edited file you are free to override or retain
      arguments: 
        #this dicates the unique iteration that will be read. Changing this value allows for redoing processes. 
        rerun_key: 0
        hard_rerun: y
      descriptors:
        runtype: no_method
    CompareAndPublishDets:
      parameters:
        methodID: pgpamdb-default-compare-publish
        methodvers: v1-3
      arguments: 
        hard_rerun: n
      descriptors:
        language: R
        runtype: lib